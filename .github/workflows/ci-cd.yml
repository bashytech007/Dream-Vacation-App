name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Run frontend tests
      working-directory: frontend
      run: npm test -- --coverage --ci --watchAll=false
      env:
        CI: false  # This prevents treating warnings as errors
        ESLINT_NO_DEV_ERRORS: true
    
    - name: Build frontend
      working-directory: frontend
      run: npm run build
      env:
        CI: false  # This prevents treating warnings as errors
        GENERATE_SOURCEMAP: false

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: frontend
      run: npm run build
      env:
        CI: false
        GENERATE_SOURCEMAP: false
    
    # Build Docker images locally (without pushing)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: dream-vacation-frontend:latest
    
    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: dream-vacation-backend:latest