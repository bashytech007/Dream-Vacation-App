name: Deploy Dream Vacation App

on:
  push:
    branches: [ main ]

env:
  FRONTEND_IMAGE: bashtech007/dream-vacation-frontend
  BACKEND_IMAGE: bashtech007/dream-vacation-backend

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ env.FRONTEND_IMAGE }}:latest

  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: ${{ env.BACKEND_IMAGE }}:latest

  terraform:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    outputs:
      instance_ip: ${{ steps.terraform-output.outputs.instance_ip }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # ✅ Write SSH public key to temp file for Terraform
    - name: Create SSH key file at runtime
      run: |
        echo "${{ secrets.EC2_SSH_PUBLIC_KEY }}" > /tmp/terraform_key.pub
        chmod 644 /tmp/terraform_key.pub

    - name: Terraform Init
      working-directory: ./terraform-infrastructure
      run: terraform init

    # ✅ Pass the path Terraform expects
    - name: Terraform Plan
      working-directory: ./terraform-infrastructure
      run: terraform plan -var="public_key_path=/tmp/terraform_key.pub"

    - name: Terraform Apply
      working-directory: ./terraform-infrastructure
      run: terraform apply -auto-approve -var="public_key_path=/tmp/terraform_key.pub"

    - name: Get Terraform Outputs
      id: terraform-output
      working-directory: ./terraform-infrastructure
      run: |
        INSTANCE_IP=$(terraform output -raw instance_public_ip || echo "")
        echo "instance_ip=$INSTANCE_IP" >> $GITHUB_OUTPUT
        echo "Instance IP: $INSTANCE_IP"

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    if: needs.terraform.outputs.instance_ip != ''

    steps:
    - uses: actions/checkout@v3

    - name: Wait for EC2 to be ready
      run: sleep 120   # extra wait for Docker install

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ needs.terraform.outputs.instance_ip }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          mkdir -p ~/dream-vacation-app
          cd ~/dream-vacation-app

          sudo docker-compose down || true

          sudo docker pull bashtech007/dream-vacation-frontend:latest
          sudo docker pull bashtech007/dream-vacation-backend:latest

          cat > docker-compose.yml << 'EOF'
          version: '3.8'
          services:
            backend:
              image: bashtech007/dream-vacation-backend:latest
              ports:
                - "5000:5000"
              restart: unless-stopped

            frontend:
              image: bashtech007/dream-vacation-frontend:latest
              ports:
                - "80:3000"
              restart: unless-stopped
              depends_on:
                - backend
          EOF

          sudo docker-compose up -d
          sudo docker ps
